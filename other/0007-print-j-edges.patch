From 5e619d5f4d72dc72cbe178b1e4ff12c2acfbd760 Mon Sep 17 00:00:00 2001
From: hiraditya <hiraditya@gmail.com>
Date: Fri, 25 Nov 2016 21:52:27 -0600
Subject: [PATCH 07/12] print j edges

---
 lib/Transforms/Scalar/GVNHoist.cpp         | 12 +++-
 test/Transforms/GVNHoist/dj-edge-detect.ll | 97 ++++++++++++++++++++++++++++++
 2 files changed, 108 insertions(+), 1 deletion(-)
 create mode 100644 test/Transforms/GVNHoist/dj-edge-detect.ll

diff --git a/lib/Transforms/Scalar/GVNHoist.cpp b/lib/Transforms/Scalar/GVNHoist.cpp
index 76b7699..f931a5a 100644
--- a/lib/Transforms/Scalar/GVNHoist.cpp
+++ b/lib/Transforms/Scalar/GVNHoist.cpp
@@ -230,7 +230,7 @@ public:
       for (const BasicBlock *Succ : BB->getTerminator()->successors())
         if (!DT->properlyDominates(BB, Succ)) {
           JEdges.insert(std::make_pair(BB, Succ));
-          llvm_unreachable("testcase");
+          //llvm_unreachable("testcase");
         }
     }
   }
@@ -249,6 +249,16 @@ public:
     DenseSet<EdgeT> JEdges;
     constructDJGraph(DomLevels, JEdges, BBLevels);
     printBBLevels(BBLevels);
+    for (std::pair<unsigned ,BBLevelKeyT> &P: BBLevels) {
+      for (const BasicBlock* BB: P.second) {
+        for (auto PB = pred_begin(BB), PE = pred_end(BB);
+             PB != PE; ++PB) {
+          if (JEdges.count(std::make_pair(*PB, BB))) {
+            dbgs() << "\nFound a JEdge: " << (*PB)->getName() << " -> " << BB->getName();
+          }
+        }
+      }
+    }
     return DomLevels.size() + JEdges.size();
   }
 
diff --git a/test/Transforms/GVNHoist/dj-edge-detect.ll b/test/Transforms/GVNHoist/dj-edge-detect.ll
new file mode 100644
index 0000000..8a854f3
--- /dev/null
+++ b/test/Transforms/GVNHoist/dj-edge-detect.ll
@@ -0,0 +1,97 @@
+; RUN: opt -S -gvn-hoist < %s | FileCheck %s
+
+; CHECK-LABEL: define void @music_task
+; CHECK: Found a JEdge: while.cond2.backedge -> while.cond2
+; CHECK: Found a JEdge: while.cond.loopexit -> while.cond
+; CHECK: Found a JEdge: sw.default -> while.cond2.backedge
+; CHECK: Found a JEdge: sw.bb13 -> while.cond2.backedge
+; CHECK: Found a JEdge: sw.bb7 -> while.cond2.backedge
+; CHECK: Found a JEdge: sw.bb -> while.cond2.backedge;
+
+%struct._MUSIC_OP_API_ = type { %struct._FILE_OPERATE_*, %struct.__MUSIC_API* }
+%struct._FILE_OPERATE_ = type { %struct._FILE_OPERATE_INIT_*, %struct._lg_dev_info_* }
+%struct._FILE_OPERATE_INIT_ = type { i32, i32, i32, i32, i32*, i8*, i32 }
+%struct._lg_dev_info_ = type { %struct.os_event, i32, i32, %struct._lg_dev_hdl_*, i8, i8, i8, i8, i8 }
+%struct.os_event = type { i8, i32, i8*, %union.anon }
+%union.anon = type { %struct.event_cnt }
+%struct.event_cnt = type { i16 }
+%struct._lg_dev_hdl_ = type { i8*, i8*, i8*, i8*, i8* }
+%struct.__MUSIC_API = type <{ i8*, i8*, i32, %struct._DEC_API, %struct._DEC_API_IO*, %struct._FS_BRK_POINT* }>
+%struct._DEC_API = type { %struct._DEC_PHY*, i8*, i8*, i8* (i8*)*, i32* (i8*)*, i8*, %struct._AAC_DEFAULT_SETTING, i32, i32, i8*, %struct.decoder_inf*, i32, i8, i8*, i8, i8* }
+%struct._DEC_PHY = type { i8*, %struct.__audio_decoder_ops*, i8*, %struct.if_decoder_io, %struct.if_dec_file*, i8*, i32 (i8*)*, i32, i8, %struct.__FF_FR }
+%struct.__audio_decoder_ops = type { i8*, i32 (i8*, %struct.if_decoder_io*, i8*)*, i32 (i8*)*, i32 (i8*, i32)*, %struct.decoder_inf* (i8*)*, i32 (i8*)*, i32 (i8*)*, i32 (...)*, i32 (...)*, i32 (...)*, void (i8*, i32)*, void (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*)* }
+%struct.if_decoder_io = type { i8*, i32 (i8*, i32, i8*, i32, i8)*, i32 (i8*, i32, i8*)*, void (i8*, i8*, i32)*, i32 (i8*)*, i32 (i8*, i32, i32)* }
+%struct.if_dec_file = type { i32 (i8*, i8*, i32)*, i32 (i8*, i32, i32)* }
+%struct.__FF_FR = type { i32, i32, i8, i8, i8 }
+%struct._AAC_DEFAULT_SETTING = type { i32, i32, i32 }
+%struct.decoder_inf = type { i16, i16, i32, i32 }
+%struct._DEC_API_IO = type { i8*, i8*, i16 (i8*, i8*, i16)*, i32 (i8*, i8, i32)*, i32 (%struct.decoder_inf*, i32)*, %struct.__OP_IO, i32, i32 }
+%struct.__OP_IO = type { i8*, i8* (i8*, i8*, i32)* }
+%struct._FS_BRK_POINT = type { %struct._FS_BRK_INFO, i32, i32 }
+%struct._FS_BRK_INFO = type { i32, i32, [8 x i8], i8, i8, i16 }
+
+@.str = external hidden unnamed_addr constant [10 x i8], align 1
+
+define void @music_task(i8* nocapture readnone %p) local_unnamed_addr {
+entry:
+  %mapi = alloca %struct._MUSIC_OP_API_*, align 8
+  %0 = bitcast %struct._MUSIC_OP_API_** %mapi to i8*
+  br label %while.cond
+
+while.cond.loopexit:                              ; preds = %while.cond2
+  br label %while.cond
+
+while.cond:                                       ; preds = %while.cond.loopexit, %entry
+  %1 = load %struct._MUSIC_OP_API_*, %struct._MUSIC_OP_API_** %mapi, align 8, !tbaa !1
+ %call1 = call i32 @music_play_api(i8* %0)
+  br label %while.cond2
+
+while.cond2:                                      ; preds = %while.cond2.backedge, %while.cond
+  %err.0 = phi i32 [ %call1, %while.cond ], [ %err.0.be, %while.cond2.backedge ]
+  switch i32 %err.0, label %sw.default [
+    i32 0, label %while.cond.loopexit
+    i32 35, label %sw.bb
+    i32 11, label %sw.bb7
+    i32 12, label %sw.bb13
+  ]
+
+sw.bb:                                            ; preds = %while.cond2
+  %a = load %struct._MUSIC_OP_API_*, %struct._MUSIC_OP_API_** %mapi, align 8, !tbaa !1
+ br label %while.cond2.backedge
+
+sw.bb7:                                           ; preds = %while.cond2
+  %v = load %struct._MUSIC_OP_API_*, %struct._MUSIC_OP_API_** %mapi, align 8, !tbaa !1
+ %call12 = call i32 @music_play_api(i8* %0)
+  br label %while.cond2.backedge
+
+sw.bb13:                                          ; preds = %while.cond2
+ %call18 = call i32 @music_play_api(i8* %0)
+  br label %while.cond2.backedge
+
+sw.default:                                       ; preds = %while.cond2
+  %lk = load %struct._MUSIC_OP_API_*, %struct._MUSIC_OP_API_** %mapi, align 8, !tbaa !1
+  %call19 = call i32 @music_play_api(i8* null)
+  br label %while.cond2.backedge
+
+while.cond2.backedge:                             ; preds = %sw.default, %sw.bb13, %sw.bb7, %sw.bb
+  %err.0.be = phi i32 [ %call19, %sw.default ], [ %call18, %sw.bb13 ], [ %call12, %sw.bb7 ], [ 0, %sw.bb ]
+  br label %while.cond2
+}
+
+declare void @llvm.lifetime.start(i64, i8* nocapture)
+declare i32 @music_decoder_init(%struct._MUSIC_OP_API_**)
+declare i32 @music_play_api(i8*)
+declare i32 @printf(i8* nocapture readonly, ...)
+
+!0 = !{!"clang version 4.0.0 "}
+!1 = !{!2, !2, i64 0}
+!2 = !{!"any pointer", !3, i64 0}
+!3 = !{!"omnipotent char", !4, i64 0}
+!4 = !{!"Simple C/C++ TBAA"}
+!5 = !{!6, !2, i64 8}
+!6 = !{!"_MUSIC_OP_API_", !2, i64 0, !2, i64 8}
+!7 = !{!8, !9, i64 16}
+!8 = !{!"__MUSIC_API", !2, i64 0, !2, i64 8, !9, i64 16, !10, i64 20, !2, i64 140, !2, i64 148}
+!9 = !{!"int", !3, i64 0}
+!10 = !{!"_DEC_API", !2, i64 0, !2, i64 8, !2, i64 16, !2, i64 24, !2, i64 32, !2, i64 40, !11, i64 48, !9, i64 60, !9, i64 64, !2, i64 72, !2, i64 80, !9, i64 88, !3, i64 92, !2, i64 96, !3, i64 104, !2, i64 112}
+!11 = !{!"_AAC_DEFAULT_SETTING", !9, i64 0, !9, i64 4, !9, i64 8}
-- 
2.5.0

